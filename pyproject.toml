[project]
name = "nzb"
version = "0.5.4"
description = "A spec compliant parser and meta editor for NZB files."
authors = [{ name = "Ravencentric", email = "me@ravencentric.cc" }]
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"
keywords = ["nzb", "usenet", "parser"]
classifiers = [
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Typing :: Typed",
]
dependencies = []

[project.urls]
Documentation = "https://ravencentric.cc/nzb/"
Repository = "https://github.com/Ravencentric/nzb"

[dependency-groups]
docs = [
  "mkdocs-autorefs>=1.3.0",
  "mkdocs-material>=9.5.50",
  "mkdocstrings[python]>=0.27.0",
]
test = [
  "coverage[toml]>=7.6.10",
  "pytest>=8.3.4",
  "rnzb>=0.4.4",
  "tomli>=2.2.1",
]
lint = ["mypy>=1.16.0", "ruff>=0.11.12"]
dev = [
  { include-group = "docs" },
  { include-group = "test" },
  { include-group = "lint" },
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = [
  "I",    # https://docs.astral.sh/ruff/rules/#isort-i
  "DTZ",  # https://docs.astral.sh/ruff/rules/#flake8-datetimez-dtz
  "RUF",  # https://docs.astral.sh/ruff/rules/#ruff-specific-rules-ruf
  "UP",   # https://docs.astral.sh/ruff/rules/#pyupgrade-up
  "N",    # https://docs.astral.sh/ruff/rules/#pep8-naming-n
  "D4",   # https://docs.astral.sh/ruff/rules/#pydocstyle-d
  "B",    # https://docs.astral.sh/ruff/rules/#flake8-bugbear-b
  "FBT",  # https://docs.astral.sh/ruff/rules/#flake8-boolean-trap-fbt
  "C4",   # https://docs.astral.sh/ruff/rules/#flake8-comprehensions-c4
  "EM",   # https://docs.astral.sh/ruff/rules/#flake8-errmsg-em
  "ISC",  # https://docs.astral.sh/ruff/rules/multi-line-implicit-string-concatenation/
  "PIE",  # https://docs.astral.sh/ruff/rules/#flake8-pie-pie
  "RET",  # https://docs.astral.sh/ruff/rules/#flake8-raise-rse
  "PL",   # https://docs.astral.sh/ruff/rules/#pylint-pl
  "E",    # https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
  "W",    # https://docs.astral.sh/ruff/rules/#pycodestyle-e-w
  "FURB", # https://docs.astral.sh/ruff/rules/#refurb-furb
  "TC",   # https://docs.astral.sh/ruff/rules/#flake8-type-checking-tc
]
fixable = ["ALL"]

[tool.ruff.lint.extend-per-file-ignores]
"src/nzb/_subparsers.py" = ["PLR"]
"tests/*" = ["D", "FBT", "PL", "C416", "E501"]

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.mypy]
strict = true
pretty = true
files = ["src/**/*.py", "tests/**/*.py"]
enable_error_code = ["ignore-without-code"]

[tool.pytest.ini_options]
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
filterwarnings = ["error"]
log_cli_level = "INFO"
testpaths = ["tests"]

[tool.coverage.report]
exclude_also = [
  "if TYPE_CHECKING:", # Only used for type-hints
]

[build-system]
build-backend = "hatchling.build"
requires = ["hatchling"]
